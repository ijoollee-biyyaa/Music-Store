// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Music_Store.Data;

#nullable disable

namespace Music_Store.Migrations
{
    [DbContext(typeof(MusicDataContext))]
    [Migration("20231120212109_musicdatamigrations")]
    partial class musicdatamigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Music_Store.Models.AlbumTbl", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("albumId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<string>("AlbumTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("albumTitle");

                    b.HasKey("AlbumId");

                    b.ToTable("AlbumTbl", (string)null);
                });

            modelBuilder.Entity("Music_Store.Models.GenreTbl", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genreId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("genreName");

                    b.HasKey("GenreId");

                    b.ToTable("GenreTbl", (string)null);
                });

            modelBuilder.Entity("Music_Store.Models.LanguageTbl", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("languageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("languageName");

                    b.HasKey("LanguageId");

                    b.ToTable("LanguageTbl", (string)null);
                });

            modelBuilder.Entity("Music_Store.Models.SingerTbl", b =>
                {
                    b.Property<int>("SingerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("singerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SingerId"));

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profilePicture");

                    b.Property<string>("SingerBio")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("singerBio");

                    b.Property<string>("SingerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singerName");

                    b.HasKey("SingerId");

                    b.ToTable("SingerTbl", (string)null);
                });

            modelBuilder.Entity("Music_Store.Models.SongTbl", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("songId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("albumId");

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("genreId");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("languageId");

                    b.Property<int>("SingerId")
                        .HasColumnType("int")
                        .HasColumnName("singerId");

                    b.Property<string>("SongDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("songDescription");

                    b.Property<string>("SongFilepath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("songFilepath");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("songName");

                    b.Property<string>("SongPicture")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("songPicture");

                    b.Property<string>("SongRelease")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("songRelease");

                    b.HasKey("SongId");

                    b.HasIndex(new[] { "AlbumId" }, "IX_SongTbl_albumId");

                    b.HasIndex(new[] { "GenreId" }, "IX_SongTbl_genreId");

                    b.HasIndex(new[] { "LanguageId" }, "IX_SongTbl_languageId");

                    b.HasIndex(new[] { "SingerId" }, "IX_SongTbl_singerId");

                    b.ToTable("SongTbl", (string)null);
                });

            modelBuilder.Entity("Music_Store.Models.SongTbl", b =>
                {
                    b.HasOne("Music_Store.Models.AlbumTbl", "Album")
                        .WithMany("SongTbls")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_SongTbl_AlbumTbl");

                    b.HasOne("Music_Store.Models.GenreTbl", "Genre")
                        .WithMany("SongTbls")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_SongTbl_GenreTbl");

                    b.HasOne("Music_Store.Models.LanguageTbl", "Language")
                        .WithMany("SongTbls")
                        .HasForeignKey("LanguageId")
                        .IsRequired()
                        .HasConstraintName("FK_SongTbl_LanguageTbl");

                    b.HasOne("Music_Store.Models.SingerTbl", "Singer")
                        .WithMany("SongTbls")
                        .HasForeignKey("SingerId")
                        .IsRequired()
                        .HasConstraintName("FK_SongTbl_SingerTbl");

                    b.Navigation("Album");

                    b.Navigation("Genre");

                    b.Navigation("Language");

                    b.Navigation("Singer");
                });

            modelBuilder.Entity("Music_Store.Models.AlbumTbl", b =>
                {
                    b.Navigation("SongTbls");
                });

            modelBuilder.Entity("Music_Store.Models.GenreTbl", b =>
                {
                    b.Navigation("SongTbls");
                });

            modelBuilder.Entity("Music_Store.Models.LanguageTbl", b =>
                {
                    b.Navigation("SongTbls");
                });

            modelBuilder.Entity("Music_Store.Models.SingerTbl", b =>
                {
                    b.Navigation("SongTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
